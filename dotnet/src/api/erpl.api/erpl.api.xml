<?xml version="1.0"?>
<doc>
    <assembly>
        <name>erpl.api</name>
    </assembly>
    <members>
        <member name="T:erpl.api.Controllers.API.Base.BaseController">
            <summary>
            BaseController
            </summary>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.GetEmailFromClaims">
            <summary>
            GetEmailFromClaims
            </summary>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.OkOrBadRequest(sh.infrastructure.BrokenRules.BusinessResult)">
            <summary>
            OkOrBadRequest
            </summary>
            <param name="businessResult"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.OkOrNoResult(System.Object)">
            <summary>
            OkOrNoResult
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.CreatedOrNoResult(System.Object)">
            <summary>
            CreatedOrNoResult
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.CreateLinksFor(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Guid,System.String)">
            <summary>
            CreateLinksFor
            </summary>
            <param name="urlHelper"></param>
            <param name="routeName"></param>
            <param name="id"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.CreateLinksForList(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,erpl.common.infrastructure.ResourceParameters.BaseResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            CreateLinksForList
            </summary>
            <param name="urlHelper"></param>
            <param name="routeName"></param>
            <param name="parameters"></param>
            <param name="hasNext"></param>
            <param name="hasPrevious"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.CreateResourceUri(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,erpl.common.infrastructure.ResourceParameters.BaseResourceParameters,erpl.common.infrastructure.Paging.ResourceUriType)">
            <summary>
            CreateResourceUri
            </summary>
            <param name="urlHelper"></param>
            <param name="routeName"></param>
            <param name="parameters"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:erpl.api.Controllers.API.Base.BaseController.CreateOkWithMetaData``1(erpl.common.infrastructure.Paging.PagedList{``0},System.String,erpl.common.infrastructure.ResourceParameters.BaseResourceParameters,Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String)">
            <summary>
            CreateOkWithMetaData
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pagedResponse"></param>
            <param name="mediaType"></param>
            <param name="parameters"></param>
            <param name="urlHelper"></param>
            <param name="routeNameForSingle"></param>
            <param name="routeNameForList"></param>
            <returns></returns>
        </member>
        <member name="T:erpl.api.Controllers.API.V1.SuspectsController">
            <summary>
            Suspect Controller
            </summary>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.#ctor(MediatR.IMediator,Microsoft.AspNetCore.Mvc.IUrlHelper,erpl.common.infrastructure.TypeHelpers.ITypeHelperService,erpl.common.infrastructure.PropertyMappings.IPropertyMappingService)">
            <summary>
            ctor
            </summary>
            <param name="mediator"></param>
            <param name="urlHelper"></param>
            <param name="typeHelperService"></param>
            <param name="propertyMappingService"></param>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.FetchSuspectsAsync(erpl.common.dtos.ResourceParameters.Suspects.GetSuspectsResourceParameters,System.String)">
            <summary>
            Get - Fetch all Suspects
            </summary>
            <param name="parameters">Suspect parameters for fetching</param>
            <param name="mediaType"></param>
            <remarks>Fetch all Suspects </remarks>
            <response code="200">Resource retrieved correctly</response>
            <response code="401">Unauthorized</response>
            <response code="404">Resource Not Found</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.GetSuspectByIdAsync(System.String)">
            <summary>
            Get - Fetch one Suspect
            </summary>
            <param name="id">Suspect Id for fetching</param>
            <remarks>Fetch one Suspect </remarks>
            <response code="200">Resource retrieved correctly</response>
            <response code="401">Unauthorized</response>
            <response code="404">Resource Not Found</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.CreateSuspectAsync(erpl.common.dtos.ResourceParameters.Suspects.CreateSuspectResourceParameters)">
            <summary>
            Post - Create a Suspect
            </summary>
            <param name="suspectForCreationParameters">CreateSuspectResourceParameters for creation</param>
            <remarks>Create Suspect </remarks>
            <response code="201">Resource Creation Finished</response>
            <response code="204">Resource No Content</response>
            <response code="401">Resource Unauthorized</response>
            <response code="404">Resource Not Found</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.UpdateSuspectAsync(System.String,erpl.common.dtos.ResourceParameters.Suspects.UpdateSuspectResourceParameters)">
            <summary>
            Put - Update a Suspect
            </summary>
            <param name="id">Suspect Id for modification</param>
            <param name="request">UpdateSuspectResourceParameters for modification</param>
            <remarks>Update Suspect </remarks>
            <response code="200">Resource Modification Finished</response>
            <response code="204">Resource No Content</response>
            <response code="401">Resource Unauthorized</response>
            <response code="404">Resource Not Found</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:erpl.api.Controllers.API.V1.SuspectsController.DeleteSuspectAsync(System.String)">
            <summary>
            Delete - Delete an existing Suspect - Delete
            </summary>
            <param name="id">Suspect Id for deletion</param>
            <remarks>Delete existing Suspect </remarks>
            <response code="200">Resource Deletion Finished</response>
            <response code="204">Resource No Content</response>
            <response code="401">Resource Unauthorized</response>
            <response code="404">Resource Not Found</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="T:erpl.api.Controllers.HomeController">
            <summary>
            HomeController
            </summary>
        </member>
        <member name="M:erpl.api.Controllers.HomeController.Index">
            <summary>
            Index
            </summary>
            <returns></returns>
        </member>
        <member name="T:erpl.api.Helpers.HttpGlobalExceptionFilter">
            <summary>
            Class : HttpGlobalExceptionFilter
            </summary>
        </member>
        <member name="M:erpl.api.Helpers.HttpGlobalExceptionFilter.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILogger{erpl.api.Helpers.HttpGlobalExceptionFilter})">
            <summary>
            Ctor : HttpGlobalExceptionFilter
            </summary>
            <param name="env"></param>
            <param name="logger"></param>
        </member>
        <member name="M:erpl.api.Helpers.HttpGlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Method : OnException
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:erpl.api.Helpers.InternalServerErrorObjectResult">
            <summary>
            Class : InternalServerErrorObjectResult
            </summary>
        </member>
        <member name="M:erpl.api.Helpers.InternalServerErrorObjectResult.#ctor(System.Object)">
            <summary>
            Ctor : InternalServerErrorObjectResult
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:erpl.api.Program">
            <summary>
            Class : Program
            </summary>
        </member>
        <member name="M:erpl.api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:erpl.api.Program.CreateWebHostBuilder(Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            CreateWebHostBuilder
            </summary>
            <param name="configuration"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:erpl.api.Startup">
            <summary>
            Startup class for configurations
            </summary>
        </member>
        <member name="M:erpl.api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Startup ctor
            </summary>
            <param name="configuration"></param>
            <param name="hostEnv"></param>
        </member>
        <member name="P:erpl.api.Startup.Configuration">
            <summary>
            IConfiguration
            </summary>
        </member>
        <member name="P:erpl.api.Startup.HostEnv">
            <summary>
            IWebHostEnvironment
            </summary>
        </member>
        <member name="M:erpl.api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:erpl.api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure application builder
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:erpl.api.Validators.ValidateModelAttribute">
            <summary>
            Class
            </summary>
        </member>
    </members>
</doc>
